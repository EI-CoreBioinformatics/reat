Bootstrap: docker
From: ubuntu:18.04

%environment
export PATH=$PATH:/opt/software/hisat2-2.1.0:/opt/software/TransDecoder-TransDecoder-v5.5.0:/opt/software/TransDecoder-TransDecoder-v5.5.0/util
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.6/dist-packages/

%post
mkdir /jic
mkdir /nbi
mkdir /tgac
mkdir /ei
mkdir /tsl
mkdir /opt/software

### Install your packages ###
cd /opt/software/
apt -y update
apt -y install software-properties-common build-essential zlib1g-dev libbz2-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev \
libreadline-dev libffi-dev wget lzma lzma-dev liblzma-dev tk-dev libsqlite3-dev python3 ruby-full libidn11-dev libidn11 \
default-jdk git libcurl4-openssl-dev curl cmake libcairo2-dev libcogl-pango-dev unzip python python3-pip python-pip \
libboost-all-dev make libssl-dev libghc-zlib-dev libexpat1-dev gettext unzip gnuplot cpanminus

java -version
python3 --version
python --version

# BioPerl
cpanm -i XML::DOM::XPath --force
cpanm -i Parallel::ForkManager File::Which Scalar::Util::Numeric URI::Escape Data::Dumper URI::Escape Bio::SeqIO

# FullLengtherNext
gem install -q -f full_lengther_next  -v 1.0.1 -N
full_lengther_next --help

# Install BLAST
wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.7.1/ncbi-blast-2.7.1+-x64-linux.tar.gz
tar xf ncbi-blast-2.7.1+-x64-linux.tar.gz
cp ncbi-blast-2.7.1+/bin/* /usr/local/bin
blastx -help

# Install MagicBlast
wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/magicblast/1.5.0/ncbi-magicblast-1.5.0-x64-linux.tar.gz
tar xf ncbi-magicblast-1.5.0-x64-linux.tar.gz
cp ncbi-magicblast-1.5.0/bin/* /usr/local/bin
magicblast -help

# LibDeflate
cd /opt/software/
git clone https://github.com/ebiggers/libdeflate.git
cd libdeflate
make -j 20
make install
cd ../
rm -rf libdeflate

# CPAN
curl -L http://cpanmin.us | perl - App::cpanminus
cpanm -i Parallel::ForkManager File::Which Scalar::Util::Numeric URI::Escape Data::Dumper # I might need more for augustus

# HTSLib
wget https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2
tar xaf htslib-1.9.tar.bz2
mv htslib-1.9 htslib  # Necessary for augustus
cd htslib
./configure --enable-libcurl --enable-plugins --enable-s3  --with-libdeflate
make -j 20
make install
htsfile --help 2>&1 | head
# tabix
cd ../
rm htslib-1.9.tar.bz2

### Samtools
wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2
tar xaf samtools-1.9.tar.bz2
mv samtools-1.9 samtools  # Necessary for augustus
cd samtools  # and similarly for bcftools and htslib
./configure --enable-libcurl --enable-plugins --enable-s3
make -j 20
make install
samtools --help 2>&1 | head
cd ../
rm samtools-1.9.tar.bz2

# BCFTools
wget https://github.com/samtools/bcftools/releases/download/1.9/bcftools-1.9.tar.bz2
tar xaf bcftools-1.9.tar.bz2
mv bcftools-1.9 bcftools
cd bcftools
./configure --enable-libcurl --enable-plugins --enable-s3
make -j 20
make install
bcftools --help 2>&1 | head
cd /opt/software/
rm -rf bcftools-1.9.tar.bz2

# BAMtools
wget https://github.com/pezmaster31/bamtools/archive/v2.5.1.tar.gz -O bamtools-v2.5.1.tar.gz
tar xaf bamtools-v2.5.1.tar.gz
mv bamtools-2.5.1 bamtools
cd bamtools
sed -e '/set( CMAKE_BUILD_TYPE Release )/a set( CMAKE_CXX_FLAGS_RELEASE "-std=c++98 ${CMAKE_CXX_FLAGS_RELEASE}" )' -i CMakeLists.txt  # BugFix for linking
mkdir build
cd build
cmake ../
make -j 20
make install
bamtools --help 2>&1 | head
cd ../../
rm -rf bamtools-v2.5.1.tar.gz

# Install gffread - this has to be *after* cufflinks as it supercedes it
cd /opt/software/
git clone https://github.com/gpertea/gclib.git
cd gclib
git checkout 54917d0
cd ../
git clone https://github.com/gpertea/gffread.git
cd gffread
git checkout ba7535f
make
cp gffread /usr/local/bin/
cd /opt/software/
gffread --help 2>&1 | head
rm -rf gffread gclib

# GMAP
wget http://research-pub.gene.com/gmap/src/gmap-gsnap-2019-02-15.tar.gz
tar xaf gmap-gsnap-2019-02-15.tar.gz
cd gmap-2019-02-15
for i in sse2 ssse3 sse41 sse42;
do
    ./configure --with-simd-level=$i --enable-zlib --enable-bzlib
    make -j 20
    make install
done;

gmap --help
gsnap --help
cd /opt/software/
rm -rf gmap-gsnap-2019-02-15.tar.gz

# MiniMap2
wget https://github.com/lh3/minimap2/releases/download/v2.17/minimap2-2.17_x64-linux.tar.bz2
tar xaf minimap2-2.17_x64-linux.tar.bz2
cd minimap2-2.17_x64-linux
mv k8 minimap2 paftools.js -t /usr/local/bin/
minimap2 --help
cd /opt/software/
rm -rf minimap2-2.17_x64-linux.tar.bz2 minimap2-2.17_x64-linux

# GenomeTools
cd /opt/software/
wget https://github.com/genometools/genometools/archive/v1.5.10.tar.gz -O genometools-1.5.10.tar.gz
tar xaf genometools-1.5.10.tar.gz
cd genometools-1.5.10
make 64bit=yes opt=yes cairo=no errorcheck=yes useshared=no -j 20
make install
cd /opt/software/
rm -rf genometools-1.5.10.tar.gz genometools-1.5.10


# HISAT2
wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.1.0-Linux_x86_64.zip
unzip hisat2-2.1.0-Linux_x86_64.zip
hisat2-2.1.0/hisat2-build --help
rm hisat2-2.1.0-Linux_x86_64.zip
cd /opt/software

# STAR
wget https://github.com/alexdobin/STAR/archive/2.7.3a.tar.gz -O star-2.7.3a.tar.gz
tar xaf star-2.7.3a.tar.gz
mv STAR-2.7.3a/bin/Linux_x86_64_static/STAR -t /usr/local/bin/
mv STAR-2.7.3a/bin/Linux_x86_64_static/STARlong -t /usr/local/bin/
STAR --help
STARlong --help
cd /opt/software/
rm -rf star-2.7.3a.tar.gz STAR-2.7.3a

# seqtk
git clone https://github.com/lh3/seqtk.git
cd seqtk
make -j 8
make install
cd /opt/software

# Stringtie2 + SuperReads
git clone -b v2.1.1 https://github.com/gpertea/stringtie.git
cd stringtie
make -j 4 release
cp stringtie /usr/local/bin
stringtie -h

cd SuperReads_RNA
sed -i '141s/operator/realloc/' global-1/SuperReadsR/include/reallocators.hpp
./install.sh
cp /opt/software/stringtie/SuperReads_RNA/create_rna_sr.py /usr/local/bin
create_rna_sr.py -h

cd /opt/software/

# Scallop
wget https://github.com/Kingsford-Group/scallop/releases/download/v0.10.4/scallop-0.10.4_linux_x86_64.tar.gz
tar xf scallop-0.10.4_linux_x86_64.tar.gz
cp scallop-0.10.4_linux_x86_64/scallop /usr/local/bin
rm -rf scallop-0.10.4_linux_x86_64*

wget https://github.com/Kingsford-Group/scallop/releases/download/isoseq-v0.9.2/scallop-lr-0.9.2_linux_x86_64.tar.gz
tar xf scallop-lr-0.9.2_linux_x86_64.tar.gz
cp scallop-lr-0.9.2_linux_x86_64/scallop-lr /usr/local/bin
rm -rf scallop-lr-0.9.2_linux_x86_64*

#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
#scallop -h
scallop-lr -h

# DIAMOND
wget https://github.com/bbuchfink/diamond/releases/download/v0.9.30/diamond-linux64.tar.gz
tar xf diamond-linux64.tar.gz
cp diamond /usr/local/bin
rm diamond-linux64.tar.gz diamond
diamond --help

# Prodigal
wget https://github.com/hyattpd/Prodigal/releases/download/v2.6.3/prodigal.linux
chmod +x prodigal.linux
mv prodigal.linux /usr/local/bin/prodigal
prodigal -h

# Transdecoder
wget https://github.com/TransDecoder/TransDecoder/archive/TransDecoder-v5.5.0.tar.gz
tar xf TransDecoder-v5.5.0.tar.gz

# Prepare python dependencies for Mikado and Portcullis
pip3 install pandas matplotlib setuptools sphinx tabulate

# Portcullis
wget https://github.com/maplesond/portcullis/archive/1.2.2.tar.gz
tar xf 1.2.2.tar.gz
cd portcullis-1.2.2
./autogen.sh
./configure
make -j 8
make install
cd /opt/software

# Mikado
pip3 install cython
wget https://github.com/EI-CoreBioinformatics/mikado/archive/2.0rc6.tar.gz
tar xf 2.0rc6.tar.gz
cd mikado-2.0rc6
#python3 setup.py test;
python3 setup.py bdist_wheel;
pip3 install dist/*whl
