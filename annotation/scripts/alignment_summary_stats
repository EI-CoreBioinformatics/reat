#!/usr/bin/env python3
import sys
from collections import defaultdict
import csv


class open_files:
    def __init__(self, files, flags):
        if isinstance(files, str):
            files = [files]
        if isinstance(flags, str):
            flags = [flags]
        assert len(flags) == len(files)
        self.files = files
        self.flags = flags

    def __enter__(self):
        self.fhs = []
        for f_, fl in zip(self.files, self.flags):
            self.fhs.append(open(f_, fl))
        return self.fhs

    def __exit__(self, type_, value, traceback):
        for f_ in self.fhs:
            f_.close()


def parse_line(stat_input_file):
    result = stat_input_file.readline().split('\t')
    result[-1] = result[-1].strip()
    return result


stats_to_filter = ["is_sorted"]

stats = defaultdict(list)
input_files = sys.argv[1:]
print("files", input_files, file=sys.stderr)
with open_files(input_files, ['r' for x in range(len(input_files))]) as stat_files:
    # Parse the first stats file to collect stats and fields
    print('', file=sys.stderr)
    print(0, "file: ", '.'.join(input_files[0].split('/')[-1].split('.')[:-1]), file=sys.stderr)
    for file_index, file in enumerate(stat_files):
        print('', file=sys.stderr)
        print(file_index, "file: ", '.'.join(input_files[file_index].split('/')[-1].split('.')[:-1]), file=sys.stderr)
        stats["Stat"].append('.'.join(input_files[file_index].split('/')[-1].split('.')[:-1]))
        line = parse_line(file)
        while line[0] != '':
            if "SN" != line[0]:
                line = parse_line(file)
                continue
            line[1] = line[1].replace(':', '')
            stats[line[1]].append(line[2])
            print(line[1:3], file=sys.stderr)
            line = parse_line(file)

writer = csv.writer(sys.stdout, delimiter='\t')
for k, v in stats.items():
    if k not in stats_to_filter:
        writer.writerow([k] + v)
