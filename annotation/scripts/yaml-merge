#!/usr/bin/env python3

import sys
import yaml


def merge(file_list):
    """
    Takes a list of yaml files and loads them as a single yaml document.
    Restrictions:
    1) None of the files may have a yaml document marker (---)
    2) All of the files must have the same top-level type (dictionary or list)
    3) If any pointers cross between files, then the file in which they are defined (&) must be
    earlier in the list than any uses (*).
    """

    if not file_list:
        # if flist is the empty list, return an empty list. This is arbitrary, if it turns out that
        # an empty dictionary is better, we can do something about that.
        return []

    string_list = []
    for f in file_list:
        with open(f, 'r') as stream:
            string_list.append(stream.read())
    file_string = ''
    for s in string_list:
        file_string = file_string + '\n' + s

    y = yaml.safe_load(file_string)

    return y


def main():
    y = merge(sys.argv[1:])
    f = open(sys.argv[1], "w")
    print(yaml.dump(y, default_flow_style=False), file=f)


if __name__ == "__main__":
    main()
